// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SicoobTeste.Models;

#nullable disable

namespace SicoobTeste.Migrations
{
    [DbContext(typeof(SicoobTesteContext))]
    partial class SicoobTesteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SicoobTeste.Models.AplicacaoCota", b =>
                {
                    b.Property<int>("AplicacaoCotaID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("SaldoClienteContaCapitalDiario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoDiarioRDC")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AplicacaoCotaID");

                    b.ToTable("AplicacaoCota");
                });

            modelBuilder.Entity("SicoobTeste.Models.Cartoes", b =>
                {
                    b.Property<int>("CartoesID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("DividaConsolidada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LimiteAtribuido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LimiteDisponivel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LimiteUtilizado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CartoesID");

                    b.ToTable("Cartoes");
                });

            modelBuilder.Entity("SicoobTeste.Models.CartoesTrimestre", b =>
                {
                    b.Property<int>("CartoesTrimestreID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("DividaConsolidada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LimiteAtribuido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LimiteDisponivel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LimiteUtilizado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CartoesTrimestreID");

                    b.ToTable("CartoesTrimestre");
                });

            modelBuilder.Entity("SicoobTeste.Models.Endividamento", b =>
                {
                    b.Property<int>("EndividamentoID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("DiasAtrasoParcela")
                        .HasColumnType("int");

                    b.Property<string>("OrigemPrejuizo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("SaldoDevedorDiario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SubmodalidadeBacen")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.HasKey("EndividamentoID");

                    b.ToTable("Endividamento");
                });

            modelBuilder.Entity("SicoobTeste.Models.EndividamentoExterno", b =>
                {
                    b.Property<int>("EndividamentoExternoID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Prejuizo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoDevedor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SubmodalidadeBacen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorVencerApos360Dias")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorVencerAte360Dias")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorVencido")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EndividamentoExternoID");

                    b.ToTable("EndividamentoExterno");
                });

            modelBuilder.Entity("SicoobTeste.Models.EndividamentoInterno", b =>
                {
                    b.Property<int>("EndividamentoInternoID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ModalidadeProduto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeParcelasAbertas")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoDevedorDiario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorContrato")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EndividamentoInternoID");

                    b.ToTable("EndividamentoInterno");
                });

            modelBuilder.Entity("SicoobTeste.Models.IAP", b =>
                {
                    b.Property<int>("IAPID")
                        .HasColumnType("int");

                    b.Property<string>("Automovel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CartaoCredito")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CartaoDebito")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ChequeEspecial")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cobrança")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Consorcio")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ContaCapital")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ContaCorrenteInativa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreditoRural")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DebitoAutomaticoEfetivado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Emprestimo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Financiamento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Investimento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LCA")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LCI")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MobileBanking")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Moto")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PacoteTarifas")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PreAprovado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Previdencia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ProdutoRDC")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ProdutorRural")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("QuantidadeProduto")
                        .HasColumnType("int");

                    b.Property<string>("SIPAG")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SeguroAuto")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SeguroGeral")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SeguroMassificados")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SeguroRural")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SeguroVida")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SeguroVidaPF_PJ")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Servicos")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SicoobEmpresarial")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SicoobNet")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TituloDescontado")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("VidaPrestamista")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IAPID");

                    b.ToTable("IAP");
                });

            modelBuilder.Entity("SicoobTeste.Models.LimiteCredito", b =>
                {
                    b.Property<int>("LimiteCreditoID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("DiasUtilizacaoLimiteCredito")
                        .HasColumnType("int");

                    b.Property<decimal>("LimiteCreditoContrato")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoDevedorFinal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LimiteCreditoID");

                    b.ToTable("LimiteCredito");
                });

            modelBuilder.Entity("SicoobTeste.Models.MargemContribuicao", b =>
                {
                    b.Property<int>("MargemContribuicaoID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("ResultadoAssociados")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MargemContribuicaoID");

                    b.ToTable("MargemContribuicao");
                });

            modelBuilder.Entity("SicoobTeste.Models.MediaEntradaSemestral", b =>
                {
                    b.Property<int>("MediaEntradaSemestralID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("LancamentoCredito")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MediaEntradaSemestralID", "CPF_CNPJ")
                        .HasName("PK_MediaEntradaSemestralID");

                    b.ToTable("MediaEntradaSemestral");
                });

            modelBuilder.Entity("SicoobTeste.Models.MediaEntradaTrimestral", b =>
                {
                    b.Property<int>("MediaEntradaTrimestralID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("LancamentoCredito")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MediaEntradaTrimestralID");

                    b.ToTable("MediaEntradaTrimestral");
                });

            modelBuilder.Entity("SicoobTeste.Models.PatrimonioCadastroAssociado", b =>
                {
                    b.Property<int>("PatrimonioCadastroAssociadoID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DataInicioRelacionamento")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataUltimaRenovacaoCadastral")
                        .HasColumnType("date");

                    b.Property<decimal>("ValorBemMovel")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PatrimonioCadastroAssociadoID");

                    b.ToTable("PatrimonioCadastroAssociado");
                });

            modelBuilder.Entity("SicoobTeste.Models.Roles", b =>
                {
                    b.Property<int>("RoleCode")
                        .HasColumnType("int");

                    b.Property<string>("TipoDeUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("RoleCode")
                        .HasName("PK_RoleCode");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SicoobTeste.Models.SerasaDetalhado", b =>
                {
                    b.Property<int>("SerasaDetalhadoID")
                        .HasColumnType("int");

                    b.Property<int>("AcaoJudicial")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("DividaVencida")
                        .HasColumnType("int");

                    b.Property<int>("Falencia")
                        .HasColumnType("int");

                    b.Property<int>("PEFIN")
                        .HasColumnType("int");

                    b.Property<int>("Protesto")
                        .HasColumnType("int");

                    b.Property<int>("REFIN")
                        .HasColumnType("int");

                    b.Property<int>("Recheque")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("SerasaDetalhadoID");

                    b.ToTable("SerasaDetalhado");
                });

            modelBuilder.Entity("SicoobTeste.Models.Tarifas", b =>
                {
                    b.Property<int>("TarifasID")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TarifasID");

                    b.ToTable("Tarifas");
                });

            modelBuilder.Entity("SicoobTeste.Models.Users", b =>
                {
                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RoleCode")
                        .HasColumnType("int");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UsersID");

                    b.HasIndex("RoleCode");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SicoobTeste.Models.Users", b =>
                {
                    b.HasOne("SicoobTeste.Models.Roles", "RoleCodeNavigation")
                        .WithMany("Users")
                        .HasForeignKey("RoleCode")
                        .IsRequired()
                        .HasConstraintName("FK_RoleCode");

                    b.Navigation("RoleCodeNavigation");
                });

            modelBuilder.Entity("SicoobTeste.Models.Roles", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
